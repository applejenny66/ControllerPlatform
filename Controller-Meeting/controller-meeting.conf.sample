# copy this file with name to controller-meeting.conf before any editing
# copy this file with name controller-meeting.conf before any editing
# copy this file with name to controller-meeting.conf before any editing

# put it under the same directory of controller-meeting
# put it under the same directory of controller-meeting
# put it under the same directory of controller-meeting

# config file for controller-meeting

#---------- System Log ----------#
[LOG]
# Base path of log file, date (yyyy-mm-dd) will be appended to the end
log =/data/opt/tomcat/webapps/logs/Controller-Meeting.log


# MySQL 資料庫資訊
[MYSQL SOURCE]
host = 256.256.256.256
# port setting has no effect for now
port = 3306
user = _user_
# 密碼開頭及結尾不得包含空白，因為會被 CConfigHandler 吃掉
password = _password_
database = _database_


#---------- Client Service ----------#
[CLIENT MEETING_AGENT]
# controller-meetingagent 的 IP
server_ip = 256.256.256.256

port = 2101


[CLIENT ITES 1F DOOR CONTROLLER]
# 伺服器 IP
server_ip = 256.256.256.256

# 連接埠
port = 57099

# 加密用的 key, 長度為32字元
aes_key = 0123456789abcdef0123456789abcdef


[CLIENT AMX CONTROLLER]
# AMX controller 的 IP
server_ip = 256.256.256.256

# 給使用者連線用的連接埠, 會回傳給 app 供它們連接 AMX controller
user_port = 2309

# 驗證 token 用的連接埠, 本 service 會透過這個 port 連線到 AMX controller
# 並接收來自對方的 token 驗證要求
# 若給的數值小於等於 0，則不會連線到 AMX controller
validation_port = 2311


[APP DOWNLOAD INFO CONFIG WATCHER]
# app 版本 handler 的相關設定. 當客戶端要求回傳最新的 app 版本時
# controller-meeting 會給出最新的 app 版本以及下載位址
#
# 本區塊的設定都是要餵給 AppVersionHandler 的某個子類別, 每個子類別分別對應到一種監控方案
# 這些類別透過持續監控某個資料夾是否有更新內容, 及時更新要回傳的 app 版本以及下載網址
#
# 若以下各種方案的參數皆有設定, 優先使用方案 2, 否則使用方案 1
# 以下的設定方式會使用方案 2 進行 app 版本參數更新
# 記住一定要設置至少一種方案的參數，不然 controller 會壞掉

# 方案 1: 監控一個資料夾下的 json 檔案, json 檔寫有 app 版本以及下載網址.
# 若發布新版本, 先把新版 apk 放在下載伺服器, 再修改 config_dir 下的 config_name 的內容,
# 就能在不重啟 controller 的情況下更新 AppVersionHandler 傳回給客戶端的最新 app 版本以及下載網址
# 而 config_name 指向的檔案的內容格式可以參考 app_version_handler_config.sample.json
# config_dir = /you/can/put/json/file/in/the/dir/where/controller-meeting/resides
# config_name = app_version_handler_config.json

# 方案 2: 監控一個資料夾下的 apk 檔案
# 這個方法需要使用 Android 的 aapt 工具才能運作, 在 aapt_path 指定 aapt 路徑
# package_name 是 app 的 package name, 作為過濾非相關 apk 之用
# download_link_base 是下載網址前綴，結尾不加上 '/'
# 若發布新版本, 先把新版 apk 放在下載伺服器, 再把新版 apk 放在 apk_dir
# 就能在不重啟 controller 的情況下更新 AppVersionHandler 傳回給客戶端的最新 app 版本
# 下載網址為 [download_link_base]/[新版apk檔案名稱], 故放在伺服器上的 apk 名稱要跟放在 apk_dir 內的 apk 名稱相同
aapt_path = /full/path/of/android-sdk/build-tools/aapt
apk_dir = /dir/where/apk/is/in
package_name = packname.name.of.app
download_link_base = https://domain.yo/folder-for-app-apks
